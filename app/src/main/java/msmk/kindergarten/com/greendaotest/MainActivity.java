package msmk.kindergarten.com.greendaotest;import android.annotation.TargetApi;import android.graphics.Bitmap;import android.graphics.drawable.BitmapDrawable;import android.media.MediaMetadataRetriever;import android.os.Build;import android.os.Bundle;import android.provider.MediaStore;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.MediaController;import android.widget.TextView;import android.widget.VideoView;import java.util.HashMap;import java.util.List;import io.reactivex.Observable;import io.reactivex.ObservableEmitter;import io.reactivex.ObservableOnSubscribe;import io.reactivex.Observer;import io.reactivex.android.schedulers.AndroidSchedulers;import io.reactivex.disposables.Disposable;import io.reactivex.schedulers.Schedulers;public class MainActivity extends AppCompatActivity {    private static final String TAG = "MainActivity";    UserPresenter userPresenter;    private MediaController mediaController;    private VideoView videoView;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        userPresenter = new UserPresenter(this);        final TextView tvResult = findViewById(R.id.tv_result);        this.findViewById(R.id.btn_insert).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                userPresenter.testInsertUser();            }        });        findViewById(R.id.btn_quire).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                List<UserEntity> list = userPresenter.testFindUser();                //Log.i(TAG, "==学科总数=onClick: ===="+list.get(0).getStudyTypeList().size());                if(list.size()>0){                    tvResult.setText(list.get(0).toString());                }else {                    tvResult.setText("为匹配到对应的用户");                }            }        });        videoView = findViewById(R.id.video);        String path = "http://bpic.588ku.com/video_listen/588ku_video/18/04/20/10/37/57/video5ad952854b39b.mp4";        createVideoThumbnail(path);        videoView.setVideoPath(path);        mediaController = new MediaController(this);        videoView.setMediaController(mediaController);    }    @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)    private void createVideoThumbnail(final String videoPath) {        Observable<Bitmap> observable = Observable.create(new ObservableOnSubscribe<Bitmap>() {            @Override            public void subscribe(ObservableEmitter<Bitmap> e) throws Exception {                Bitmap bitmap = null;                MediaMetadataRetriever retriever = new MediaMetadataRetriever();                int kind = MediaStore.Video.Thumbnails.MINI_KIND;                if (Build.VERSION.SDK_INT >= 14) {                    retriever.setDataSource(videoPath, new HashMap<String, String>());                } else {                    retriever.setDataSource(videoPath);                }                bitmap = retriever.getFrameAtTime();                e.onNext(bitmap);                retriever.release();            }        });        observable.observeOn(AndroidSchedulers.mainThread())                .subscribeOn(Schedulers.io())                .subscribe(new Observer<Bitmap>() {                    @Override                    public void onSubscribe(Disposable d) {                    }                    @Override                    public void onNext(Bitmap value) {                        mediaController.setBackground(new BitmapDrawable(value));                    }                    @Override                    public void onError(Throwable e) {                    }                    @Override                    public void onComplete() {                    }                });    }}